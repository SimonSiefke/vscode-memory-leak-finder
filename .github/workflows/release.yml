name: release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      rg_version: ${{ env.RG_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.RG_VERSION == ''
        run: |
          echo "RG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.RG_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RG_VERSION }}
          release_name: ${{ env.RG_VERSION }}

  build-release:
    name: build-release
    needs: ['create-release']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "value=$(node scripts/computeNodeModulesCacheKey.js)" >> $GITHUB_OUTPUT
        shell: bash
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            **/node_modules
            **/.vscode-test
            **/.vscode-user-data-dir
            **/.vscode-ffmpeg
            **/.vscode-source-maps
            **/.vscode-resolve-source-map-cache
          key: ${{ runner.os }}-cacheNodeModules-${{ steps.nodeModulesCacheKey.outputs.value }}
      - name: npm ci
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - run: npm run build
      - run: npm test
      - name: Run headless test
        uses: coactions/setup-xvfb@v1
        with:
          run: npm run e2e
      - name: Run headless test (check leaks)
        if: matrix.os != 'macos-13'
        uses: coactions/setup-xvfb@v1
        with:
          run: node packages/cli/bin/test.js --cwd packages/e2e --check-leaks
      - name: Run headless test (check leaks, event listeners)
        if: matrix.os == 'ubuntu-22.04'
        uses: coactions/setup-xvfb@v1
        with:
          run: node packages/cli/bin/test.js --cwd packages/e2e --check-leaks --measure event-listeners
      - name: upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RG_VERSION }}
          files: .vscode-memory-leak-finder-results
